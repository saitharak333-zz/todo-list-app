{"version":3,"sources":["components/example/first.jsx","components/todo/AuthService.js","components/todo/Login.jsx","components/todo/Header.jsx","components/todo/WelcomePage.jsx","components/todo/ErrorPage.jsx","components/todo/ListTodo.jsx","components/todo/Footer.jsx","components/todo/Logout.jsx","components/todo/TodoApp.jsx","App.js","serviceWorker.js","index.js"],"names":["First","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","class","Component","Firstsubpart","Firstpart","_Component2","todo_AuthService","username","password","console","log","sessionStorage","setItem","removeItem","getItem","Login","_this","call","state","successlog","invalidlog","stateChange","bind","assertThisInitialized","check","className","UnsuccessfulLog","SuccessfulLog","type","name","onChange","onClick","setState","AuthService","RegisterUser","props","history","push","concat","event","target","defineProperty","Header","userLogged","isUserLogged","react_router_dom","to","RemoveUser","WelcomePage","Fragment","Header_Header","match","params","ErrorPage","ListTodo","todo","id","desc","tardate","Date","comp","map","todos","toString","Footer","Logout","TodoApp","react_router","path","exact","component","Footer_Footer","App","TodoApp_TodoApp","Newline","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6TAEaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,SAAb,uBAHZhB,EAAA,CAA2BiB,aAUZ,SAASC,IACpB,OACIL,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,gBAAb,0BAMD,IAAMG,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAjB,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,GAAAjB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAiB,EAAAC,GAAAlB,OAAAQ,EAAA,EAAAR,CAAAiB,EAAA,EAAAR,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,aAAb,2BAHZG,EAAA,CAA+BF,6BCIhBI,EAAA,yGAtBEC,EAAUC,GACnBC,QAAQC,IAAI,eACZC,eAAeC,QAAQ,oBAAqBL,wCAK5CI,eAAeE,WAAW,4DAK1B,OAAgB,OADFF,eAAeG,QAAQ,qBAEjCL,QAAQC,IAAI,oBACL,IAEPD,QAAQC,IAAI,6BACL,aChBEK,cAEjB,SAAAA,IAAe,IAAAC,EAAA,OAAA7B,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACXC,EAAA7B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAE,KAAA5B,QACK6B,MAAQ,CACTX,SAAU,GACVC,SAAU,GACVW,YAAY,EACZC,YAAY,GAEhBJ,EAAKK,YAAcL,EAAKK,YAAYC,KAAjBnC,OAAAoC,EAAA,EAAApC,CAAA6B,IACnBA,EAAKQ,MAAQR,EAAKQ,MAAMF,KAAXnC,OAAAoC,EAAA,EAAApC,CAAA6B,IATFA,wEAaX,OACIlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aAEVpC,KAAK6B,MAAMQ,iBAAmB5B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,uBAAf,uBAC9BpC,KAAK6B,MAAMS,eAAiB7B,EAAAC,EAAAC,cAAA,8BAHjC,cAKeF,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,OAAOC,KAAK,WAAWhC,MAAOR,KAAK6B,MAAMX,SAAUuB,SAAUzC,KAAKgC,cACzFvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAPJ,aAQcF,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,WAAWC,KAAK,WAAWhC,MAAOR,KAAK6B,MAAMV,SAAWsB,SAAUzC,KAAKgC,cAC7FvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,kBAAkBM,QAAS1C,KAAKmC,OAAlD,2CAOgB,WAAxBnC,KAAK6B,MAAMX,UAAiD,QAAxBlB,KAAK6B,MAAMV,UAC/CnB,KAAK2C,SAAS,CAACb,YAAY,IAC3B9B,KAAK2C,SAAS,CAACZ,YAAY,IAC3BX,QAAQC,IAAI,WACZuB,EAAYC,aAAa7C,KAAK6B,MAAMX,SAAUlB,KAAK6B,MAAMV,UACzDnB,KAAK8C,MAAMC,QAAQC,KAAnB,YAAAC,OAAoCjD,KAAK6B,MAAMX,aAE/ClB,KAAK2C,SAAS,CAACb,YAAY,IAC3B9B,KAAK2C,SAAS,CAACZ,YAAY,IAC3BX,QAAQC,IAAI,gDAIP6B,GACT9B,QAAQC,IAAI6B,EAAMC,OAAO3C,OACzBR,KAAK2C,SAAL7C,OAAAsD,EAAA,EAAAtD,CAAA,GAAgBoD,EAAMC,OAAOX,KAAOU,EAAMC,OAAO3C,eAnDtBK,yBCCdwC,mLAEb,IAAIC,EAAaV,EAAYW,eAE7B,OADAnC,QAAQC,IAAIiC,GAER7C,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,+CACV3B,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,cACTkB,GAAc7C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMpB,UAAU,WAAWqB,GAAG,iBAA9B,SAClBH,GAAc7C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMpB,UAAU,WAAWqB,GAAG,SAA9B,WAEvBhD,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,mDACRkB,GAAc7C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMpB,UAAU,WAAWqB,GAAG,UAA9B,UACnBH,GAAc7C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMpB,UAAU,WAAWqB,GAAG,UAAUf,QAAWE,EAAYc,YAA/D,qBAbP7C,aCAf8C,mLAGb,OACIlD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkD,SAAA,KACAnD,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aAAf,WACSpC,KAAK8C,MAAMgB,MAAMC,OAAOvB,KADjC,+BACkE/B,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAG,SAAT,QADlE,aAP6B5C,aCFpBmD,mLAGb,OACIvD,EAAAC,EAAAC,cAAA,mDAJ2BE,aCAlBoD,qBACjB,SAAAA,IAAc,IAAAtC,EAAA,OAAA7B,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACVtC,EAAA7B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAArC,KAAA5B,QACK6B,MAAQ,CACTqC,KAAM,CAAC,CAACC,GAAI,EAAGC,KAAM,OAAQC,QAAS,IAAIC,KAAQC,MAAM,GAChD,CAACJ,GAAI,EAAGC,KAAM,SAAUC,QAAS,IAAIC,KAAQC,MAAM,GACnD,CAACJ,GAAI,EAAGC,KAAM,SAAUC,QAAS,IAAIC,KAAQC,MAAM,GACnD,CAACJ,GAAI,EAAGC,KAAM,OAAQC,QAAS,IAAIC,KAAQC,MAAM,KANnD5C,wEAWV,OACIlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACf3B,EAAAC,EAAAC,cAAA,SAAOyB,UAAU,SACb3B,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aAEQX,KAAK6B,MAAMqC,KAAKM,IACZ,SAAAC,GAAK,OACDhE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAK8D,EAAMN,IACX1D,EAAAC,EAAAC,cAAA,UAAK8D,EAAML,MACX3D,EAAAC,EAAAC,cAAA,UAAK8D,EAAMJ,QAAQK,YACnBjE,EAAAC,EAAAC,cAAA,UAAK8D,EAAMF,KAAKG,0BAjClB7D,cCAjB8D,0LAGb,OACIlE,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,UACd3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,cAAhB,0CALoBvB,cCAf+D,mLAEb,OACInE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkD,SAAA,KACInD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aAAf,gCANgBvB,qBCQfgE,mLAEb,OACIpE,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACI/C,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkD,SAAA,KACInD,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACIrE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvD,IACjCjB,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAWvD,IAChCjB,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAWhB,IAC/BxD,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,iBAAiBE,UAAWtB,IACxClD,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWL,IACjCnE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOG,UAAWjB,OAK9BvD,EAAAC,EAAAC,cAACuE,EAAD,cApBqBrE,aCD/BsE,gMAEJ,OACE1E,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAACyE,EAAD,cAJYvE,cAUIA,YActB,SAASwE,IACP,OACE5E,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WAAf,yBAMW+C,QC7BKG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2DCZN4B,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.69228fc3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class First extends Component {\n    render () {\n        return (\n            <div class = \"first\">\n                First Component\n            </div>\n        );\n    }\n}\n\nexport default function Firstsubpart () {\n    return (\n        <div class = \"firstsubpart\">\n            FirstSubPart Component\n        </div>\n    );\n}\n\nexport class Firstpart extends Component {\n    render () {\n        return (\n            <div class = \"firstpart\">\n                FirstPart Component\n            </div>\n        );\n    }\n}\n\n// export function Firstsubpart () {\n//     return (\n//         <div class = \"firstsubpart\">\n//             FirstSubPart Component\n//         </div>\n//     );\n// }\n","class AuthService {\n\n    RegisterUser(username, password) {\n        console.log(\"Token Added\");\n        sessionStorage.setItem('authenticatedUser', username);\n\n    }\n\n    RemoveUser(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLogged () {\n        let userdet = sessionStorage.getItem('authenticateUser');\n        if (userdet === null){\n            console.log(\"No user details\");\n            return false;\n        } else{\n            console.log(\"User details are present\");\n            return true;\n        }\n    }\n}\n\nexport default new AuthService()","import React, {Component} from 'react'\nimport AuthService from \"./AuthService.js\"\n\nexport default class Login extends Component{\n    \n    constructor () {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            successlog: false,\n            invalidlog: false\n        }\n        this.stateChange = this.stateChange.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\n                    {this.state.UnsuccessfulLog && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.SuccessfulLog && <div>Login Sucessful</div>}\n                    {/*<ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.stateChange}/>\n                    <br/>\n                    <br/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password}  onChange={this.stateChange}/>\n                    <br/>\n                    <br/>\n                    <button className=\"btn btn-success\" onClick={this.check}>Login</button>\n                </div>\n            </div>\n        );\n    }\n\n    check () {\n        if (this.state.username === \"tharak\" && this.state.password === \"one\"){\n            this.setState({successlog: true})\n            this.setState({invalidlog: false})\n            console.log(\"Success\");\n            AuthService.RegisterUser(this.state.username, this.state.password);\n            this.props.history.push(`/welcome/${this.state.username}`);\n        } else {\n            this.setState({successlog: false})\n            this.setState({invalidlog: true})\n            console.log(\"Failure\");\n        }\n    }\n\n    stateChange (event) {\n        console.log(event.target.value);\n        this.setState({[event.target.name]: event.target.value})\n    }\n}\n\nfunction SuccessfulLog(props) {\n    if (props.sucflag === true){\n        return <div>Successfull Login</div>;\n    } else {\n        return null;\n    }\n}\n\nfunction UnsuccessfulLog(props) {\n    if (props.failflag === true){\n        return <div>Unsuccessfull Login</div>;\n    } else {\n        return null;\n    }\n}\n\n","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport AuthService from \"./AuthService.js\"\n\nexport default class Header extends Component{\n    render () {\n        var userLogged = AuthService.isUserLogged();\n        console.log(userLogged);\n        return (\n            <div>\n               <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <ul className=\"navbar-nav\">\n                        {userLogged && <li><Link className=\"nav-link\" to=\"/welcome/home\">Home</Link></li>}\n                        {userLogged && <li><Link className=\"nav-link\" to=\"/todo\">Todos</Link></li>}\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!userLogged && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\n                        {userLogged && <li><Link className=\"nav-link\" to=\"/logout\" onClick = {AuthService.RemoveUser}>Logout</Link></li>}\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport Header from \"./Header\"\n\nexport default class WelcomePage extends Component{\n    \n    render () {\n        return (\n            <>\n            <Header />\n            <h1>Welcome!</h1>\n            <div className=\"container\">\n            Welcome {this.props.match.params.name}. You can manage your todos <Link to=\"/todo\">here</Link>.\n            </div>\n        </>\n        );\n    }\n}","import React, {Component} from 'react'\n\nexport default class ErrorPage extends Component{\n    \n    render () {\n        return (\n            <div>\n                Page not found. Contact Admin\n            </div>\n        );\n    }\n}","import React, {Component} from 'react'\nimport \"./Table.css\"\nexport default class ListTodo extends Component {\n    constructor (){\n        super();\n        this.state = {\n            todo: [{id: 1, desc: \"Good\", tardate: new Date(), comp: false},\n                    {id: 2, desc: \"V Good\", tardate: new Date(), comp: false},\n                    {id: 3, desc: \"better\", tardate: new Date(), comp: false},\n                    {id: 4, desc: \"best\", tardate: new Date(), comp: false}]\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <h1>Todos List</h1>\n                <div className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>description</th>\n                            <th>Date</th>\n                            <th>Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.todo.map(\n                                todos =>\n                                    <tr>\n                                        <td>{todos.id}</td>\n                                        <td>{todos.desc}</td>\n                                        <td>{todos.tardate.toString()}</td>\n                                        <td>{todos.comp.toString()}</td>\n                                    </tr> \n                            )\n                        }\n                    </tbody>\n                </table>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport \"./FooterSec.css\"\nexport default class Footer extends Component{\n\n    render () {\n        return (\n            <footer className=\"footer\">\n                <span className=\"text-muted\">All Rights Reserved 2018 @user</span>\n            </footer>\n        );\n    }\n}","import React, {Component} from 'react'\n\nexport default class Logout extends Component {\n    render () {\n        return (\n            <>\n                <div>\n                    <h1>You're Logged out</h1>\n                    <div className=\"container\">\n                        Thankyou for using.\n                    </div>\n                </div>\n            </>\n        );\n    }\n}","import React, {Component} from 'react'\nimport Login from \"./Login\"\nimport WelcomePage from \"./WelcomePage\"\nimport ErrorPage from \"./ErrorPage\"\nimport ListTodo from \"./ListTodo\"\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\nimport Logout from \"./Logout\"\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nexport default class TodoApp extends Component {\n    render () {\n        return (\n            <div>\n                {/* ToDo Page */}\n                <br/>\n                <Router>\n                    <Header />\n                    <>\n                        <Switch>\n                            <Route path=\"/\" exact component={Login} />\n                            <Route path=\"/login\" component={Login} />\n                            <Route path=\"/todo\" component={ListTodo} />\n                            <Route path=\"/welcome/:name\" component={WelcomePage} />\n                            <Route path=\"/logout\" component={Logout} />\n                            <Route component={ErrorPage} />\n                        </Switch>\n                    </>\n                </Router>\n                {/* <Login /> */}\n                <Footer />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport FirstSubpart, {First, Firstpart} from \"./components/example/first\"\n// import FirstSubpart from \"./components/example/func\"\n// import Counter from \"./components/counter/Counter\"\n// import logo, { ReactComponent } from './logo.svg';\nimport TodoApp from \"./components/todo/TodoApp\"\nimport './App.css'\nimport './bootstrap.css'\n\nclass App extends Component {\n  render () {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n  }\n}\n\nclass PrevApp extends Component {\n  render () {\n    return (\n      <div className=\"PrevApp\">\n        ToDo Application\n        <Newline></Newline>\n        <First />\n        <Firstpart />\n        <FirstSubpart />\n      </div>\n    );\n  }\n}\n\nfunction Newline() {\n  return (\n    <div className=\"Newline\">\n      it is another newline\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}